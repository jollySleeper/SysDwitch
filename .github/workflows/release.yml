name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Get version from tag
      id: get_version
      run: |
        # Extract version from tag (remove 'v' prefix if present)
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION for ${{ matrix.arch }}"

    - name: Build binary
      run: |
        # Build statically linked binary for Linux
        CGO_ENABLED=0 GOOS=linux GOARCH=${{ matrix.arch }} go build \
          -ldflags="-w -s -X main.version=${{ steps.get_version.outputs.version }} -X main.commit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          -o sysdwitch \
          ./cmd/sysdwitch/

    - name: Verify binary
      run: |
        file sysdwitch
        ./sysdwitch -h 2>/dev/null || echo "Binary built successfully (no help flag)"

    - name: Create release archive
      run: |
        # Create a tar.gz archive with the binary
        tar -czf sysdwitch-${{ steps.get_version.outputs.version }}-linux-${{ matrix.arch }}.tar.gz sysdwitch
        ls -la sysdwitch*

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          sysdwitch-${{ steps.get_version.outputs.version }}-linux-${{ matrix.arch }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
